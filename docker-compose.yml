services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: django_app
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput && gunicorn config.wsgi:application --bind 0.0.0.0:8000"
    ports:
      - "8000:8000"
    env_file:
      - .env
    volumes:
      - .:/app
      - static_volume:/app/static
    depends_on:
      db:
        condition: service_healthy

  redis:
    image: redis:latest
    container_name: redis
    restart: on-failure
    volumes:
      - redis:/var/lib/redis/data
    expose:
      - "6379"
    ports:
      - "6379:6379"

  db:
    image: postgres:16
    container_name: db
    env_file:
      - ./.env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5



volumes:
  postgres_data:
  static_volume:
  redis: