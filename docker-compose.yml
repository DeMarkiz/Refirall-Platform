services:
  web:
    build: .
    command: sh -c "python manage.py migrate &&
                    python manage.py collectstatic --noinput && 
                    python manage.py add_test_data  && 
                    python manage.py csu && 
                    gunicorn config.wsgi:application --bind 0.0.0.0:8000"
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
    expose:
      - "8000"
    depends_on:
      - db
      - redis
    env_file:
      - ./.env

  nginx:
    build:
      context: ./nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - static_volume:/app/staticfiles
    depends_on:
      - web

  db:
    image: postgres:16
    env_file:
      - ./.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network  # ← Добавлено
    healthcheck: # ← Проверка готовности БД
      test: [ "CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB" ]
      interval: 5s
      timeout: 5s
      retries: 5
    ports: # Для отладки (можно убрать в проде)
      - "5432:5432"

  redis:
    image: redis:7
    volumes:
      - redis_data:/data
    env_file:
      - ./.env

volumes:
  postgres_data:
  static_volume:
  redis_data: